# 问题：河边 N 块石头排成一排，一只青蛙蹲在第 1 块石头上，打算跳到第 N 块石头上。
# 青蛙每次可以向前跳过一块石头或者两块石头，即从第 K 块石头可以跳到第 K+1 或者
# K+2 块石头。问青蛙从第 1 块石头跳到第 N 块石头，共有多少种不同的方式? 
# 请编程实现，已知 1 <= N <= 40
#
#
# 解题思路：
# 采用递归的方式，只有1块石头，路线是[N]；2块石头，路线是[N-1, N]；3块石头，路线是
# [N-2, N-1, N]和[N-2, N]，通过简单分析发现石头个数为N的路线数是N-1和N-2两种情况之和，
# 及f(N) = f(N-1) + f(N-2)
#
# 运行方式：
# ruby ./alg1.rb 10

def f(n)
  if n <= 2
    1
  else
    f(n - 1) + f(n - 2)
  end
end

puts "共有#{f(ARGV[0].to_i)}种方式"
